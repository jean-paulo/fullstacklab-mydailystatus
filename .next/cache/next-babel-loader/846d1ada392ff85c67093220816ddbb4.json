{"ast":null,"code":"var _jsxFileName = \"/home/jean/Documents/www/fullstacklab/mydailystatus/pages/create-status.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport auth0 from '../lib/auth0';\n\nconst CreateStatus = () => {\n  const getMyLocation = () => {\n    //se o navegador tiver a funcionalidade de geolocalização\n    if (navigator.geoLocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        console.log(position);\n      });\n    } else {\n      console.log('não foi possivel obter a localização');\n    }\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"Create Status\"), __jsx(\"button\", {\n    onClick: getMyLocation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, \"Get my location\"));\n};\n\nexport default CreateStatus; //verificar se o usuario ta logado\n\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    return {\n      props: {\n        isAuth: true,\n        user: session.user\n      }\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false,\n      user: {}\n    }\n  };\n}","map":{"version":3,"sources":["/home/jean/Documents/www/fullstacklab/mydailystatus/pages/create-status.js"],"names":["React","auth0","CreateStatus","getMyLocation","navigator","geoLocation","geolocation","getCurrentPosition","position","console","log","getServerSideProps","req","res","session","getSession","props","isAuth","user"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,cAAlB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAMC,aAAa,GAAG,MAAI;AACxB;AACA,QAAGC,SAAS,CAACC,WAAb,EAAyB;AACvBD,MAAAA,SAAS,CAACE,WAAV,CAAsBC,kBAAtB,CAAyCC,QAAQ,IAAI;AACnDC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,OAFD;AAGD,KAJD,MAIK;AACHC,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AAED;AACF,GAVD;;AAYA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAQ,IAAA,OAAO,EAAEP,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,CADF;AAMD,CAnBD;;AAoBA,eAAeD,YAAf,C,CAEA;;AACA,OAAO,eAAeS,kBAAf,CAAkC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAlC,EAAgD;AACrD,QAAMC,OAAO,GAAG,MAAMb,KAAK,CAACc,UAAN,CAAiBH,GAAjB,CAAtB;;AACA,MAAIE,OAAJ,EAAa;AACX,WAAO;AACLE,MAAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAE,IADH;AAELC,QAAAA,IAAI,EAAEJ,OAAO,CAACI;AAFT;AADF,KAAP;AAMD;;AACD,SAAO;AACLF,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE,KADH;AAELC,MAAAA,IAAI,EAAE;AAFD;AADF,GAAP;AAMD","sourcesContent":["import React from 'react';\nimport auth0 from '../lib/auth0';\n\nconst CreateStatus = () => {\n  const getMyLocation = ()=>{\n    //se o navegador tiver a funcionalidade de geolocalização\n    if(navigator.geoLocation){\n      navigator.geolocation.getCurrentPosition(position => {\n        console.log(position);\n      });\n    }else{\n      console.log('não foi possivel obter a localização');\n      \n    }\n  };\n\n  return (\n    <div>\n      <h1>Create Status</h1>\n      <button onClick={getMyLocation}>Get my location</button>\n    </div>\n    );\n};\nexport default CreateStatus;\n\n//verificar se o usuario ta logado\nexport async function getServerSideProps({ req, res }) {\n  const session = await auth0.getSession(req);\n  if (session) {\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n      }\n    }\n  }\n  return {\n    props: {\n      isAuth: false,\n      user: {}\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}