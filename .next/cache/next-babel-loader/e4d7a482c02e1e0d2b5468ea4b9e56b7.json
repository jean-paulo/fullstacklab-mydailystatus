{"ast":null,"code":"var _jsxFileName = \"/home/jean/Documents/www/fullstacklab/mydailystatus/pages/app.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport auth0 from '../lib/auth0';\nimport router from 'next/router';\nimport { db } from '../lib/db';\nimport { distance } from '../lib/geo';\n\nconst App = props => {\n  //executa somente uma vez\n  //se o usuario não estiver logado ele é redirecionado para a home\n  useEffect(() => {\n    if (!props.isAuth) {\n      router.push('/');\n    } else if (props.forceCreate) {\n      router.push('/create-status');\n    }\n  });\n\n  if (!props.isAuth || props.forceCreate) {\n    return null;\n  }\n\n  return __jsx(\"div\", {\n    className: \"p-5 rounded text-left max-w-lg mx-auto my-16 object-contain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, props.checkins.map(checkin => {\n    return __jsx(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, __jsx(\"td\", {\n      className: \"font-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }\n    }, checkin.id === props.user.sub && 'Seu status:', __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 89\n      }\n    })), __jsx(\"td\", {\n      className: \"font-bold text-red-700\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }\n    }, checkin.status), __jsx(\"td\", {\n      className: \"p-3 leading-snug\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    }, \"Latitude:\", JSON.stringify(checkin.coords.lat), \"Longitude:\", JSON.stringify(checkin.coords.long)), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }, \"Distancia:\", checkin.distance), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    }));\n  })));\n};\n\nexport default App; //essa função só é possível com o next, não é possível apenas com create react-app\n\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n  console.log(session);\n\n  if (session) {\n    const today = new Date();\n    const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate();\n    const todaysCheckin = await db.collection('markers').doc(currentDate).collection('checks').doc(session.user.sub).get();\n    const todaysData = todaysCheckin.data();\n    let forceCreate = true; //se verdadeiro pode ver os checkins, se não, tem que postar\n\n    if (todaysData) {\n      //pode ver os outros checkins\n      forceCreate = false;\n      const checkins = await db.collection('markers').doc(currentDate).collection('checks').near({\n        center: todaysData.coordinates,\n        radius: 1000\n      }).get();\n      const checkinsList = [];\n      checkins.docs.forEach(doc => {\n        checkinsList.push({\n          id: doc.id,\n          status: doc.data().status,\n          coords: {\n            lat: doc.data().coordinates.latitude,\n            long: doc.data().coordinates.longitude\n          },\n          distance: distance(todaysData.coordinates.latitude, todaysData.coordinates.longitude, doc.data().coordinates.latitude, doc.data().coordinates.longitude).toFixed(2)\n        });\n      });\n      return {\n        props: {\n          isAuth: true,\n          user: session.user,\n          forceCreate: false,\n          checkins: checkinsList\n        }\n      };\n    }\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        forceCreate\n      }\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false,\n      user: {}\n    }\n  };\n}","map":{"version":3,"sources":["/home/jean/Documents/www/fullstacklab/mydailystatus/pages/app.js"],"names":["React","useEffect","auth0","router","db","distance","App","props","isAuth","push","forceCreate","checkins","map","checkin","id","user","sub","status","JSON","stringify","coords","lat","long","getServerSideProps","req","res","session","getSession","console","log","today","Date","currentDate","getFullYear","getMonth","getDate","todaysCheckin","collection","doc","get","todaysData","data","near","center","coordinates","radius","checkinsList","docs","forEach","latitude","longitude","toFixed"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport auth0 from '../lib/auth0';\nimport router from 'next/router';\nimport { db } from '../lib/db';\nimport { distance } from '../lib/geo';\n\nconst App = (props) => {\n  //executa somente uma vez\n  //se o usuario não estiver logado ele é redirecionado para a home\n  useEffect(() => {\n    if (!props.isAuth) {\n      router.push('/');\n    } else if (props.forceCreate) {\n      router.push('/create-status');\n    }\n  });\n\n  if (!props.isAuth || props.forceCreate) {\n    return null;\n  }\n\n  return (\n    <div className='p-5 rounded text-left max-w-lg mx-auto my-16 object-contain'>\n\n      <table>\n        {props.checkins.map(checkin => {\n          return (\n            <div className=''>\n              <td className='font-bold'>{checkin.id === props.user.sub && 'Seu status:'}<br /></td>\n              <td className='font-bold text-red-700'>{checkin.status}</td>\n              <td className='p-3 leading-snug'>\n                Latitude:{JSON.stringify(checkin.coords.lat)}\n              Longitude:{JSON.stringify(checkin.coords.long)}\n              </td>\n              <td>Distancia:{checkin.distance}</td>\n              <br />\n            </div>\n          )\n        })}\n      </table>\n    </div>\n  );\n};\n\n\n\nexport default App;\n\n//essa função só é possível com o next, não é possível apenas com create react-app\nexport async function getServerSideProps({ req, res }) {\n  const session = await auth0.getSession(req);\n  console.log(session);\n  if (session) {\n    const today = new Date();\n    const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate();\n    const todaysCheckin = await db\n      .collection('markers')\n      .doc(currentDate)\n      .collection('checks')\n      .doc(session.user.sub)\n      .get()\n\n    const todaysData = todaysCheckin.data();\n    let forceCreate = true;\n\n    //se verdadeiro pode ver os checkins, se não, tem que postar\n    if (todaysData) {\n      //pode ver os outros checkins\n      forceCreate = false;\n      const checkins = await db.\n        collection('markers')\n        .doc(currentDate)\n        .collection('checks')\n        .near({\n          center: todaysData.coordinates,\n          radius: 1000\n        })\n        .get();\n\n      const checkinsList = [];\n\n      checkins.docs.forEach(doc => {\n        checkinsList.push({\n          id: doc.id,\n          status: doc.data().status,\n          coords: {\n            lat: doc.data().coordinates.latitude,\n            long: doc.data().coordinates.longitude\n          },\n          distance: distance(\n            todaysData.coordinates.latitude,\n            todaysData.coordinates.longitude,\n            doc.data().coordinates.latitude,\n            doc.data().coordinates.longitude\n          ).toFixed(2)\n        });\n      });\n\n      return {\n        props: {\n          isAuth: true,\n          user: session.user,\n          forceCreate: false,\n          checkins: checkinsList,\n        }\n      };\n    }\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        forceCreate\n      }\n    };\n  }\n  return {\n    props: {\n      isAuth: false,\n      user: {}\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}