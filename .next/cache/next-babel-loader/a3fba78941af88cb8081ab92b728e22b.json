{"ast":null,"code":"var _jsxFileName = \"/home/jean/Documents/www/fullstacklab/mydailystatus/pages/app.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport auth0 from '../lib/auth0';\nimport router from 'next/router';\nimport { db } from '../lib/db';\nimport { distance } from '../lib/geo';\n\nconst App = props => {\n  //executa somente uma vez\n  //se o usuario não estiver logado ele é redirecionado para a home\n  useEffect(() => {\n    if (!props.isAuth) {\n      router.push('/');\n    } else if (props.forceCreate) {\n      router.push('/create-status');\n    }\n  });\n\n  if (!props.isAuth || props.forceCreate) {\n    return null;\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"Status Pr\\xF3ximos a voc\\xEA:\"), __jsx(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, props.checkins.map(checkin => {\n    return __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }\n    }, checkin.id), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }\n    }, checkin.status), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    }, JSON.stringify(checkin.coords)));\n  })));\n};\n\nexport default App; //essa função só é possível com o next, não é possível apenas com create react-app\n\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n  console.log(session);\n\n  if (session) {\n    const today = new Date();\n    const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate();\n    const todaysCheckin = await db.collection('markers').doc(currentDate).collection('checks').doc(session.user.sub).get();\n    const todaysData = todaysCheckin.data();\n    let forceCreate = true; //se verdadeiro pode ver os checkins, se não, tem que postar\n\n    if (todaysData) {\n      //pode ver os outros checkins\n      forceCreate = false;\n      const checkins = await db.collection('markers').doc(currentDate).collection('checks').near({\n        center: todaysData.coordinates,\n        radius: 1000\n      }).get();\n      const checkinsList = [];\n      checkins.docs.forEach(doc => {\n        checkinsList.push({\n          id: doc.id,\n          status: doc.data().status,\n          coords: {\n            lat: doc.data().coordinates.latitude,\n            long: doc.data().coordinates.longitude\n          },\n          distance: distance(todaysData.coordinates.latitude, todaysData.coordinates.longitude, doc.data().coordinates.latitude, doc.data().coordinates.longitude)\n        });\n      });\n      return {\n        props: {\n          isAuth: true,\n          user: session.user,\n          forceCreate: false,\n          checkins: checkinsList\n        }\n      };\n    }\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        forceCreate\n      }\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false,\n      user: {}\n    }\n  };\n}","map":{"version":3,"sources":["/home/jean/Documents/www/fullstacklab/mydailystatus/pages/app.js"],"names":["React","useEffect","auth0","router","db","distance","App","props","isAuth","push","forceCreate","checkins","map","checkin","id","status","JSON","stringify","coords","getServerSideProps","req","res","session","getSession","console","log","today","Date","currentDate","getFullYear","getMonth","getDate","todaysCheckin","collection","doc","user","sub","get","todaysData","data","near","center","coordinates","radius","checkinsList","docs","forEach","lat","latitude","long","longitude"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport auth0 from '../lib/auth0';\nimport router from 'next/router';\nimport { db } from '../lib/db';\nimport { distance } from '../lib/geo';\n\nconst App = (props) => {\n  //executa somente uma vez\n  //se o usuario não estiver logado ele é redirecionado para a home\n  useEffect(() => {\n    if (!props.isAuth) {\n      router.push('/');\n    } else if (props.forceCreate) {\n      router.push('/create-status');\n    }\n  });\n\n  if (!props.isAuth || props.forceCreate) {\n    return null;\n  }\n\n  return (\n    <div>\n      <h1>Status Próximos a você:</h1>\n      <table>\n        {props.checkins.map(checkin => {\n          return (\n            <tr>\n              <td>{checkin.id}</td>\n              <td>{checkin.status}</td>\n              <td>{JSON.stringify(checkin.coords)}</td>\n            </tr>\n          )\n        })}\n  \n      </table>\n    </div>\n  );\n};\n\nexport default App;\n\n//essa função só é possível com o next, não é possível apenas com create react-app\nexport async function getServerSideProps({ req, res }) {\n  const session = await auth0.getSession(req);\n  console.log(session);\n  if (session) {\n    const today = new Date();\n    const currentDate = today.getFullYear() + '-' + today.getMonth()+ '-' + today.getDate();\n    const todaysCheckin = await db\n      .collection('markers')\n      .doc(currentDate)\n      .collection('checks')\n      .doc(session.user.sub)\n      .get()\n\n    const todaysData = todaysCheckin.data();\n    let forceCreate = true;\n\n    //se verdadeiro pode ver os checkins, se não, tem que postar\n    if (todaysData) {\n      //pode ver os outros checkins\n      forceCreate = false;\n      const checkins = await db.\n      collection('markers')\n      .doc(currentDate)\n      .collection('checks')\n      .near({\n        center: todaysData.coordinates,\n        radius: 1000\n      })\n      .get();\n\n      const checkinsList = [];\n\n      checkins.docs.forEach(doc => {\n        checkinsList.push({\n          id: doc.id,\n          status: doc.data().status,\n          coords:{\n            lat: doc.data().coordinates.latitude,\n            long: doc.data().coordinates.longitude\n          },\n          distance: distance(todaysData.coordinates.latitude, todaysData.coordinates.longitude, doc.data().coordinates.latitude, doc.data().coordinates.longitude)\n        });\n      });\n\n      return {\n        props: {\n          isAuth: true,\n          user: session.user,\n          forceCreate: false,\n          checkins: checkinsList,\n        }\n      };\n    }\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        forceCreate\n      }\n    };\n  }\n  return {\n    props: {\n      isAuth: false,\n      user: {}\n    }\n  };\n}"]},"metadata":{},"sourceType":"module"}