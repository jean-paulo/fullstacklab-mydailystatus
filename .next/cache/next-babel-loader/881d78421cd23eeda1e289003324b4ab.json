{"ast":null,"code":"var _jsxFileName = \"/home/jean/Documents/www/fullstacklab/mydailystatus/pages/app.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport auth0 from '../lib/auth0';\nimport router from 'next/router';\nimport { db } from '../lib/db';\n\nconst App = props => {\n  //executa somente uma vez\n  //se o usuario não estiver logado ele é redirecionado para a home\n  useEffect(() => {\n    if (!props.isAuth) {\n      router.push('/');\n    } else if (props.forceCreate) {\n      router.push('/create-status');\n    }\n  });\n\n  if (!props.isAuth || props.forceCreate) {\n    return null;\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"APP\"), __jsx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, JSON.stringify(props, null, 2)));\n};\n\nexport default App; //essa função só é possível com o next, não é possível apenas com create react-app\n\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n  console.log(session);\n\n  if (session) {\n    const today = new Date();\n    const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate();\n    const todaysCheckin = await db.collection('markers').doc(currentDate).collection('checks').doc('session.user.sub').get();\n    const todaysData = todaysCheckin.data();\n    let forceCreate = true; //se verdadeiro pode ver os checkins, se não, tem que postar\n\n    if (todaysData) {\n      forceCreate = false;\n    }\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        forceCreate\n      }\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false,\n      user: {}\n    }\n  };\n}","map":{"version":3,"sources":["/home/jean/Documents/www/fullstacklab/mydailystatus/pages/app.js"],"names":["React","useEffect","auth0","router","db","App","props","isAuth","push","forceCreate","JSON","stringify","getServerSideProps","req","res","session","getSession","console","log","today","Date","currentDate","getFullYear","getMonth","getDate","todaysCheckin","collection","doc","get","todaysData","data","user"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,EAAT,QAAmB,WAAnB;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AACrB;AACA;AACAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACK,KAAK,CAACC,MAAX,EAAmB;AACjBJ,MAAAA,MAAM,CAACK,IAAP,CAAY,GAAZ;AACD,KAFD,MAEO,IAAIF,KAAK,CAACG,WAAV,EAAuB;AAC5BN,MAAAA,MAAM,CAACK,IAAP,CAAY,gBAAZ;AACD;AACF,GANQ,CAAT;;AAQA,MAAI,CAACF,KAAK,CAACC,MAAP,IAAiBD,KAAK,CAACG,WAA3B,EAAwC;AACtC,WAAO,IAAP;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,IAAI,CAACC,SAAL,CAAeL,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAN,CAFF,CADF;AAMD,CArBD;;AAuBA,eAAeD,GAAf,C,CAEA;;AACA,OAAO,eAAeO,kBAAf,CAAkC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAlC,EAAgD;AACrD,QAAMC,OAAO,GAAG,MAAMb,KAAK,CAACc,UAAN,CAAiBH,GAAjB,CAAtB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;;AACA,MAAIA,OAAJ,EAAa;AACX,UAAMI,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,UAAMC,WAAW,GAAGF,KAAK,CAACG,WAAN,KAAsB,GAAtB,GAA4BH,KAAK,CAACI,QAAN,EAA5B,GAA8C,GAA9C,GAAoDJ,KAAK,CAACK,OAAN,EAAxE;AACA,UAAMC,aAAa,GAAG,MAAMrB,EAAE,CAC3BsB,UADyB,CACd,SADc,EAEzBC,GAFyB,CAErBN,WAFqB,EAGzBK,UAHyB,CAGd,QAHc,EAIzBC,GAJyB,CAIrB,kBAJqB,EAKzBC,GALyB,EAA5B;AAOA,UAAMC,UAAU,GAAGJ,aAAa,CAACK,IAAd,EAAnB;AACA,QAAIrB,WAAW,GAAG,IAAlB,CAXW,CAaX;;AACA,QAAIoB,UAAJ,EAAgB;AACdpB,MAAAA,WAAW,GAAG,KAAd;AACD;;AAED,WAAO;AACLH,MAAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAE,IADH;AAELwB,QAAAA,IAAI,EAAEhB,OAAO,CAACgB,IAFT;AAGLtB,QAAAA;AAHK;AADF,KAAP;AAOD;;AACD,SAAO;AACLH,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE,KADH;AAELwB,MAAAA,IAAI,EAAE;AAFD;AADF,GAAP;AAMD","sourcesContent":["import React, { useEffect } from 'react';\nimport auth0 from '../lib/auth0';\nimport router from 'next/router';\nimport { db } from '../lib/db';\n\nconst App = (props) => {\n  //executa somente uma vez\n  //se o usuario não estiver logado ele é redirecionado para a home\n  useEffect(() => {\n    if (!props.isAuth) {\n      router.push('/');\n    } else if (props.forceCreate) {\n      router.push('/create-status');\n    }\n  });\n\n  if (!props.isAuth || props.forceCreate) {\n    return null;\n  }\n\n  return (\n    <div>\n      <h1>APP</h1>\n      <pre>{JSON.stringify(props, null, 2)}</pre>\n    </div>\n  );\n};\n\nexport default App;\n\n//essa função só é possível com o next, não é possível apenas com create react-app\nexport async function getServerSideProps({ req, res }) {\n  const session = await auth0.getSession(req);\n  console.log(session);\n  if (session) {\n    const today = new Date();\n    const currentDate = today.getFullYear() + '-' + today.getMonth()+ '-' + today.getDate();\n    const todaysCheckin = await db\n      .collection('markers')\n      .doc(currentDate)\n      .collection('checks')\n      .doc('session.user.sub')\n      .get()\n\n    const todaysData = todaysCheckin.data();\n    let forceCreate = true;\n\n    //se verdadeiro pode ver os checkins, se não, tem que postar\n    if (todaysData) {\n      forceCreate = false;\n    }\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        forceCreate\n      }\n    }\n  }\n  return {\n    props: {\n      isAuth: false,\n      user: {}\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}