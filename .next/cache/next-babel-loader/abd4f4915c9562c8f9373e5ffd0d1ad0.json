{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/jean/Documents/www/fullstacklab/mydailystatus/pages/create-status.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\n\nvar CreateStatus = function CreateStatus() {\n  var getMyLocation = function getMyLocation() {\n    //se o navegador tiver a funcionalidade de geolocalização\n    if (navigator.geoLocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        console.log(position);\n      });\n    }\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"Create Status\"), __jsx(\"button\", {\n    onClick: getMyLocation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, \"Get my location\"));\n};\n\nexport var __N_SSP = true;\nexport default CreateStatus; //verificar se o usuario ta logado","map":{"version":3,"sources":["/home/jean/Documents/www/fullstacklab/mydailystatus/pages/create-status.js"],"names":["React","CreateStatus","getMyLocation","navigator","geoLocation","geolocation","getCurrentPosition","position","console","log"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAI;AACxB;AACA,QAAGC,SAAS,CAACC,WAAb,EAAyB;AACvBD,MAAAA,SAAS,CAACE,WAAV,CAAsBC,kBAAtB,CAAyC,UAAAC,QAAQ,EAAI;AACnDC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,OAFD;AAGD;AACF,GAPD;;AASA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAQ,IAAA,OAAO,EAAEL,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,CADF;AAMD,CAhBD;;;AAiBA,eAAeD,YAAf,C,CAEA","sourcesContent":["import React from 'react';\nimport auth0 from '../lib/auth0';\n\nconst CreateStatus = () => {\n  const getMyLocation = ()=>{\n    //se o navegador tiver a funcionalidade de geolocalização\n    if(navigator.geoLocation){\n      navigator.geolocation.getCurrentPosition(position => {\n        console.log(position);\n      });\n    }\n  };\n\n  return (\n    <div>\n      <h1>Create Status</h1>\n      <button onClick={getMyLocation}>Get my location</button>\n    </div>\n    );\n};\nexport default CreateStatus;\n\n//verificar se o usuario ta logado\nexport async function getServerSideProps({ req, res }) {\n  const session = await auth0.getSession(req);\n  if (session) {\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n      }\n    }\n  }\n  return {\n    props: {\n      isAuth: false,\n      user: {}\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}